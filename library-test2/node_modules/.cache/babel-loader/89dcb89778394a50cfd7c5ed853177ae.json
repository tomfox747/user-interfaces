{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thoma\\\\Documents\\\\3rd year\\\\Project\\\\Docs\\\\user-interfaces\\\\library-test2\\\\src\\\\components\\\\DynamicChart\\\\DynamicChart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { LineChart } from 'react-chartkick';\nimport 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst testData = {};\n\nconst DynamicChart = ({\n  currentPopulation,\n  element\n}) => {\n  _s();\n\n  const [dataValues, setDataValues] = useState([]);\n  const [chartData, setChartData] = useState({\n    1: 0,\n    2: 0,\n    3: 0,\n    4: 0,\n    5: 0,\n    6: 0,\n    7: 0,\n    8: 0,\n    9: 0,\n    10: 0\n  });\n  useEffect(() => {\n    for (var index = 0; index < dataValues.length; index++) {\n      chartData.push({\n        \"\": dataValues[index]\n      });\n    }\n  }, [dataValues]);\n  useEffect(() => {\n    if (dataValues.length === 10) {\n      let values = [...dataValues];\n      values.shift();\n      values.push(currentPopulation);\n      setDataValues(values);\n    } else {\n      setDataValues([...dataValues, currentPopulation]);\n    }\n  }, [element]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex\",\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      data: {\n        \"value1\": 2,\n        \"value2\": 1,\n        \"value3\": 6,\n        \"value4\": 3,\n        \"value5\": 5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n/**\r\n * dataValues.map((value,index) =>{\r\n                    return(\r\n                        <div className=\"ml-2\" key={'dataValues'+index}>\r\n                            {value}\r\n                        </div>\r\n                    )\r\n                })\r\n * \r\n */\n\n\n_s(DynamicChart, \"MCRrfBtRPV2YHFU6MBdVFD5C9WY=\");\n\n_c = DynamicChart;\nexport default DynamicChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"DynamicChart\");","map":{"version":3,"sources":["C:/Users/thoma/Documents/3rd year/Project/Docs/user-interfaces/library-test2/src/components/DynamicChart/DynamicChart.jsx"],"names":["React","useState","useEffect","LineChart","testData","DynamicChart","currentPopulation","element","dataValues","setDataValues","chartData","setChartData","index","length","push","values","shift"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,SAAR,QAAwB,iBAAxB;AACA,OAAO,UAAP;;AAEA,MAAMC,QAAQ,GAAC,EAAf;;AAIA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,iBAAD;AAAmBC,EAAAA;AAAnB,CAAD,KAAgC;AAAA;;AACjD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC;AACvC,OAAE,CADqC;AAEvC,OAAE,CAFqC;AAGvC,OAAE,CAHqC;AAIvC,OAAE,CAJqC;AAKvC,OAAE,CALqC;AAMvC,OAAE,CANqC;AAOvC,OAAE,CAPqC;AAQvC,OAAE,CARqC;AASvC,OAAE,CATqC;AAUvC,QAAG;AAVoC,GAAD,CAA1C;AAaAC,EAAAA,SAAS,CAAC,MAAK;AACX,SAAI,IAAIU,KAAK,GAAG,CAAhB,EAAmBA,KAAK,GAAGJ,UAAU,CAACK,MAAtC,EAA8CD,KAAK,EAAnD,EAAsD;AAClDF,MAAAA,SAAS,CAACI,IAAV,CAAe;AACX,YAAGN,UAAU,CAACI,KAAD;AADF,OAAf;AAGH;AACJ,GANQ,EAMP,CAACJ,UAAD,CANO,CAAT;AAQAN,EAAAA,SAAS,CAAC,MAAK;AACX,QAAIM,UAAU,CAACK,MAAX,KAAsB,EAA1B,EAA6B;AACzB,UAAIE,MAAM,GAAG,CAAC,GAAGP,UAAJ,CAAb;AACAO,MAAAA,MAAM,CAACC,KAAP;AACAD,MAAAA,MAAM,CAACD,IAAP,CAAYR,iBAAZ;AACAG,MAAAA,aAAa,CAACM,MAAD,CAAb;AACH,KALD,MAKK;AACDN,MAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgBF,iBAAhB,CAAD,CAAb;AACH;AACJ,GATQ,EASP,CAACC,OAAD,CATO,CAAT;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,IAAI,EAAE;AAAC,kBAAS,CAAV;AAAY,kBAAS,CAArB;AAAuB,kBAAS,CAAhC;AAAkC,kBAAS,CAA3C;AAA6C,kBAAS;AAAtD;AAAjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvCD;AAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAlDMF,Y;;KAAAA,Y;AAoDN,eAAeA,YAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {LineChart} from 'react-chartkick'\r\nimport 'chart.js'\r\n\r\nconst testData={\r\n    \r\n}\r\n\r\nconst DynamicChart = ({currentPopulation,element}) =>{\r\n    const [dataValues, setDataValues] = useState([]);\r\n    const [chartData, setChartData] = useState({\r\n        1:0,\r\n        2:0,\r\n        3:0,\r\n        4:0,\r\n        5:0,\r\n        6:0,\r\n        7:0,\r\n        8:0,\r\n        9:0,\r\n        10:0,\r\n    });\r\n\r\n    useEffect(() =>{\r\n        for(var index = 0; index < dataValues.length; index++){\r\n            chartData.push({\r\n                \"\":dataValues[index]\r\n            })\r\n        }\r\n    },[dataValues])\r\n\r\n    useEffect(() =>{\r\n        if (dataValues.length === 10){\r\n            let values = [...dataValues];\r\n            values.shift()\r\n            values.push(currentPopulation);\r\n            setDataValues(values);\r\n        }else{\r\n            setDataValues([...dataValues, currentPopulation])\r\n        }\r\n    },[element])\r\n\r\n    return(\r\n        <div className=\"d-flex\">\r\n            <LineChart data={{\"value1\":2,\"value2\":1,\"value3\":6,\"value4\":3,\"value5\":5}}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n/**\r\n * dataValues.map((value,index) =>{\r\n                    return(\r\n                        <div className=\"ml-2\" key={'dataValues'+index}>\r\n                            {value}\r\n                        </div>\r\n                    )\r\n                })\r\n * \r\n */\r\n\r\nexport default DynamicChart"]},"metadata":{},"sourceType":"module"}
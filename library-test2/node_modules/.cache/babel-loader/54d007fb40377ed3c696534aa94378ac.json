{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thoma\\\\Documents\\\\3rd year\\\\Project\\\\Docs\\\\user-interfaces\\\\library-test2\\\\src\\\\components\\\\DynamicChart\\\\DynamicChart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DynamicChart = ({\n  currentPopulation\n}) => {\n  _s();\n\n  const [dataValues, setDataValues] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n  /*\r\n  useEffect(() =>{\r\n      if (dataValues.length === 10){\r\n          let values = [...dataValues];\r\n          values.shift()\r\n          values.push(currentPopulation);\r\n          setDataValues(values);\r\n      }else{\r\n          setDataValues([...dataValues, currentPopulation])\r\n      }\r\n  },[])*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"asdfhjkl\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DynamicChart, \"OXtfjNXLJKO3tiW6FOQoShRfg70=\");\n\n_c = DynamicChart;\nexport default DynamicChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"DynamicChart\");","map":{"version":3,"sources":["C:/Users/thoma/Documents/3rd year/Project/Docs/user-interfaces/library-test2/src/components/DynamicChart/DynamicChart.jsx"],"names":["React","useState","useEffect","DynamicChart","currentPopulation","dataValues","setDataValues"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAwB;AAAA;;AACzC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,EAAnB,CAAD,CAA5C;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CApBD;;GAAME,Y;;KAAAA,Y;AAsBN,eAAeA,YAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\n\r\nconst DynamicChart = ({currentPopulation}) =>{\r\n    const [dataValues, setDataValues] = useState([1,2,3,4,5,6,7,8,9,10]);\r\n\r\n    /*\r\n    useEffect(() =>{\r\n        if (dataValues.length === 10){\r\n            let values = [...dataValues];\r\n            values.shift()\r\n            values.push(currentPopulation);\r\n            setDataValues(values);\r\n        }else{\r\n            setDataValues([...dataValues, currentPopulation])\r\n        }\r\n    },[])*/\r\n\r\n    return(\r\n        <div>\r\n            asdfhjkl\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DynamicChart"]},"metadata":{},"sourceType":"module"}